


# Шаблон выгрузки логов из WСM

# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

# Пишем шебанг

#!/bin/bash

# Здесь все вводные из задачи

## id аккаунта

ACCOUNT='1488'

## id аккаунта WAM, в который нужно отправить куки (если задача состоит в отправке именно в WAM, в противном случае это избыточная переменная)

WAMACCOUNT='2323'

## Даты начала и конца выгрузки включительно

dt1='2018-02-28'
dt2='2018-07-13'

## Если скрипт будет в дейли, нужно поставить динамические даты

dt1=$(date -d "2 days ago" '+%Y-%m-%d')
dt2=$(date -d "1 day ago" '+%Y-%m-%d')

#---------------------------------------------------------

# Далее два стула

## Один попроще: пишем аккаунт, список айдишек через запятую и назваие столбца фильтрации (где будет поиск этих айдишек)
## Можно, конечно, убрать это все в переменные, но не очень будет удобно

sh ~/lps/callers/get_wcm_segment.sh "$ACCOUNT" 2152,2149,2148,2150,2147,2151 $dt1 $dt2  "Insertion ID" > 1034287_14.csv

## Второй посложнее: ключ -а аккаунт; второй блок в конвейере ключ -е событие (imp/ev/conv); третий блок - условия на awk, если необходимо
## Опять же, можно убрать набор host/user/pass куда-нибудь во внешний конфигурационный файл, но зощем ¯\_(ツ)_/¯

## Уточнить, какие данные в каком столбце лежат, можно попробовать в аккаунте WCM на вкладке Datamining Settings в настройках.
## Но лучше выкачать кусок логов с помощью head и проверить, поскольку набор и порядок столбцов динамические.
## Для фильтрации полей могут быть использованы любые операторы awk, в частности, для 11 столбца рекомендуется match из-за специфики данных.
## Для фильтрации событий нужно смотреть сразу два столбца, это зависит от типа размещения. По умолчанию для баннерной рекламы 17й, для видео - 18й.

/opt/proclog/log-finder -a "$ACCOUNT" -f $dt1 -t $dt2 -h tools.weborama.io -u proclog -p Aa123456 | /opt/proclog/zipcat -e imp | awk 'BEGIN{FS=",";OFS=";"}{if ( ($9 == "4") && match($11, "1080") ) print $1}' > 1034961_2.csv 

/opt/proclog/log-finder -a "$ACCOUNT" -f $dt1 -t $dt2 -h tools.weborama.io -u proclog -p Aa123456 | /opt/proclog/zipcat -e ev | awk 'BEGIN{FS=",";OFS=";"}{if ( ($9 == "4") && match($11, "1081") && (($17 == "click") || ($18 == "click")) ) print $1}' > 1034961_3.csv 

# Сортировка и уникализация

for f in *.csv; do
	sort -u "$f" -o "$f"
done

# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

# Как передавать 

## В WAM - внутри awk нужно написать id сегмента, в который нужно передать куки

### Шифрованные куки (22 символа)

cat 1031488_1.enc.csv | awk '{print $1 "|291472"}' > /home/wam/encrypted/1031488_1.csv

### Нешифрованные куки (12 символов)

cat 1031488_1.csv | awk '{print $1 "|291472"}' > /home/wam/notencrypted/1031488_1.csv

### Если нужно зашифровать/расшифровать
### Также есть ключ -i - по столбцу, отсчет с 0

cat "1031488_1.csv" | go run ~/lps/core/cryptor.go -a encrypt > "1031488_1.enc.csv" && rm "1031488_1.csv" 

cat "1031488_1.enc.csv" | go run ~/lps/core/cryptor.go -a decrypt > "1031488_1.csv" && rm "1031488_1.enc.csv" 

## В myTarget 

### Ключ -base: при первичной загрузке 0. Полученное значение подставляется вместо 0, чтобы догружать в тот же сегмент

### Ключи -name и -file - понятно по названию

export GOPATH=/home/proclog/go:/opt/proclog/lps/core/goLibs
~/lps/core/myTargetUploader/myTargetUploader -config ~/lps/core/config.json -token ~/lps/core/token -base 0 -name "[Libresse] Price_Promo_Jan-Mar18_Videoprogress100" -file 1030918.cl.enc.csv  

###  

# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

# Чтобы сделать дейли:

# Добавить в начале скрипта, заменив task_number на номер задачи (+ буква, если такое уже есть):

mkdir task_number
cd task_number

# Добавить в конце, заменив task_number на номер задачи (+ буква, если такое уже есть):

cd ..
rm -rf task_number

# Записать задачу в crontab пользователя proclog

sudo -Hu proclog crontab -e

# Можно играть с датами - если поставить так, то скрипт в прямом смысле быдет работать со вчерашними логами.
# То есть, время запуска должно быть в периоде с 12 часов до 24 часов.

dt1=$(date -d "1 days ago" '+%Y-%m-%d')
dtEnd=$(date -d "0 day ago" '+%Y-%m-%d')

# При запуске скрипта с 0 до 12 часов, последние доступные логи - позавчерашние, и это стоит учесть.

dt1=$(date -d "2 days ago" '+%Y-%m-%d')
dtEnd=$(date -d "1 day ago" '+%Y-%m-%d')

# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

# Пример скрипта


#!/bin/bash

mkdir 1034189_lm
cd 1034189_lm

ACCOUNT='1337'
WAMACCOUNT='3232'

dt1=$(date -d "2 days ago" '+%Y-%m-%d')
dt2=$(date -d "1 day ago" '+%Y-%m-%d')
#dt1=2018-04-16
#dt2=2017-12-31

/opt/proclog/log-finder -a "$ACCOUNT" -f $dt1 -t $dt2 -h tools.weborama.io -u proclog -p Aa123456 | /opt/proclog/zipcat -e imp | awk 'BEGIN{FS=",";OFS=";"}{if ( ($9 == "4") && match($11, "1080") ) print $1}' > 1034189_1.csv 
/opt/proclog/log-finder -a "$ACCOUNT" -f $dt1 -t $dt2 -h tools.weborama.io -u proclog -p Aa123456 | /opt/proclog/zipcat -e ev | awk 'BEGIN{FS=",";OFS=";"}{if ( ($9 == "4") && match($11, "1081") && (($17 == "click") || ($18 == "click")) ) print $1}' > 1034189_2.csv 
/opt/proclog/log-finder -a "$ACCOUNT" -f $dt1 -t $dt2 -h tools.weborama.io -u proclog -p Aa123456 | /opt/proclog/zipcat -e conv | awk 'BEGIN{FS=",";OFS=";"}{if ( ($19 == "88") ) print $1}' > 1034189_3.csv 

for f in *.csv; do
	sort -u "$f" -o "$f"
done

cat 1034189_1.csv | awk '{print $1 "|231602"}' > /home/wam/notencrypted/"$WAMACCOUNT"_1034189_1.csv 
cat 1034189_2.csv | awk '{print $1 "|231603"}' > /home/wam/notencrypted/"$WAMACCOUNT"_1034189_2.csv 
cat 1034189_3.csv | awk '{print $1 "|231604"}' > /home/wam/notencrypted/"$WAMACCOUNT"_1034189_3.csv 

cd ..
rm -rf 1034189_lm

# Несколько святых заповедей

# Ответственность за работоспособность твоего скрипта лежит на тебе.
# Ответственность за ущерб, причиненный твои скриптом, лежит на тебе.
# Все действия должны быть осознанными.
# Проверь перед выполнением код и файлы.
# Проверь результат.
# Учти все возможные конфликты, коллизии, нагрузки.


